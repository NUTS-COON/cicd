name: Go

on:
  push:
    branches: ["main"]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v ./...

  # Задание использует инструмент "go vet", который проверяет самые распространенные ошибки
  check:
    # Задание "check" зависит от задания "build" и будет выполнено после него
    needs: build
    # Выполнить задание даже если "build" завершится с ошибкой
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
    - name: Vet
      run: go vet ./...

  tests:
    # Задание "tests" зависит от задания "build" и будет выполнено после него
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4

    - name: Test
      run: go test -v ./...
  
  # Задание проверяет код на соответствие стилю и отсутствие логических ошибок
  lint:
    # Задание "lint" зависит от заданий "check" и ""tests" и будет выполнено после них
    needs: [check, tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
      # используется действие "golangci/golangci-lint-action@v3", которое запускает линтер. Он проверит код на соответствие стилю и отсутствие логических ошибок
      - uses: golangci/golangci-lint-action@v3
